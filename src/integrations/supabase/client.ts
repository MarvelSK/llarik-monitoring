
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://uxrrxefdpjyzyepnrfme.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InV4cnJ4ZWZkcGp5enllcG5yZm1lIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE2MzA2OTMsImV4cCI6MjA1NzIwNjY5M30.FjUzbKTRfBByila6emaaCRB5zN5S6hkT0KzQSCSGLAU";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Initialize the Supabase client with realtime enabled for all channels and global fetch options
export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    realtime: {
      params: {
        eventsPerSecond: 10
      }
    },
    global: {
      headers: {
        'apikey': SUPABASE_PUBLISHABLE_KEY,
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Methods': 'GET, POST, PATCH, PUT, DELETE, OPTIONS',
        'Access-Control-Allow-Headers': 'Content-Type, Authorization, apikey, X-Client-Info',
      },
      fetch: (url, options) => {
        // Log Supabase API requests for debugging
        console.log(`Supabase ${options?.method || 'GET'} request to ${url}`);
        
        // Ensure headers are properly set for CORS and API key
        if (!options) options = {};
        if (!options.headers) options.headers = {};
        
        options.headers = {
          ...options.headers,
          'apikey': SUPABASE_PUBLISHABLE_KEY,
          'Content-Type': 'application/json',
          'Access-Control-Allow-Origin': '*',
          'Access-Control-Allow-Methods': 'GET, POST, PATCH, PUT, DELETE, OPTIONS',
          'Access-Control-Allow-Headers': 'Content-Type, Authorization, apikey, X-Client-Info',
        };
        
        return fetch(url, options);
      }
    },
    auth: {
      persistSession: true,
      detectSessionInUrl: true,
      autoRefreshToken: true,
    }
  }
);
